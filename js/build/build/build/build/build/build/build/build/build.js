const{minify:e}=require("terser"),o=require("fs/promises"),s=require("path"),r=require("glob-promise"),i=s.join(__dirname,"../.."),a=s.join(i,"source/js"),n=s.join(i,"source/js/build"),c=[s.join(a,"libs/**"),s.join(n,"**"),s.join(a,"build.js")],t={compress:{dead_code:!0,drop_console:!1,drop_debugger:!0,keep_classnames:!0,keep_fnames:!0},mangle:{keep_classnames:!0,keep_fnames:!0},format:{comments:!1},module:!0,sourceMap:{filename:"source-map",url:"source-map.map"}};async function ensureDirectoryExists(e){try{await o.mkdir(e,{recursive:!0})}catch(o){if("EEXIST"!==o.code)throw new Error(`Failed to create directory ${e}: ${o.message}`)}}async function copyFile(e,r){try{const i=s.dirname(r);await ensureDirectoryExists(i),await o.copyFile(e,r),console.log(`✓ Copied ${e} -> ${r}`)}catch(o){throw console.error(`× Error copying ${e}:`,o),o}}async function processFile(r){try{const i=await o.readFile(r,"utf8"),c=s.relative(a,r),l=s.join(n,c),p=s.dirname(l),u={...t,sourceMap:{...t.sourceMap,filename:s.basename(r),url:`${s.basename(r)}.map`}},m=await e(i,u);await ensureDirectoryExists(p),await o.writeFile(l,m.code),m.map&&await o.writeFile(`${l}.map`,m.map),console.log(`✓ Minified ${r} -> ${l}`)}catch(e){throw console.error(`× Error processing ${r}:`,e),e}}(async function minifyJS(){try{await ensureDirectoryExists(n);const e=await r(s.join(a,"libs/**/*.js"),{windowsPathsNoEscape:!0}),o=await r(s.join(a,"**/*.js"),{ignore:c,windowsPathsNoEscape:!0});if(0===o.length&&0===e.length)return void console.log("No JavaScript files found to process");console.log(`Found ${o.length} files to minify and ${e.length} lib files to copy...`);for(const o of e){const e=s.relative(a,o),r=s.join(n,e);await copyFile(o,r)}const i=4,t=[];for(let e=0;e<o.length;e+=i)t.push(o.slice(e,e+i));for(const e of t)await Promise.all(e.map(processFile));console.log("\n✓ All files processed successfully!")}catch(e){console.error("× Build failed:",e),process.exit(1)}})().catch(e=>{console.error("× Unhandled error:",e),process.exit(1)});
//# sourceMappingURL=build.js.map